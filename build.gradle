subprojects {
   repositories { mavenCentral() }
}

def sep = File.separator;

task createBundles {
    def bundles = file("$buildDir/bundles")
    outputs.dir bundles
    doLast {
        bundles.mkdirs()
    }
}

task install(dependsOn: ["step_0_Clean", "step_1_BuildPlugins"]) << {

    def libs = project(":codegen").configurations.lib
    def installProjectFolderPath = "$buildDir/install/codegen"
    def templatesProjectFolderPath = project(":templates").projectDir

    def plugins = files();
    project(":plugins").subprojects.each {
        plugins.from("${it.buildDir}/libs/")
    }

    copy {
        from "scripts/"
        into "$installProjectFolderPath/bin"
    }

    copy {
        from "conf/"
        into "$installProjectFolderPath/conf"
    }

    copy {
        from libs, "${project(":codegen").buildDir}/libs/"
        into "$installProjectFolderPath/lib"
    }

    copy {
        from project(":codegen").configurations.bundle, plugins
        into "$installProjectFolderPath/bundles"
    }

    copy {
        from new File(templatesProjectFolderPath, "src")
        into "$installProjectFolderPath/templates/src"
    }

}

// -------------------------------
//
//           STEPS
//
// -------------------------------


task step_0_Clean()  {
    def cleanTasks = getTasksByName("clean", true);
    cleanTasks.each {
        dependsOn it
    }
}

task step_1_BuildPlugins() {
    subprojects.each {
        def foundTasks = it.getTasksByName("build", true)
        foundTasks.each {
            dependsOn it
        }
    }
}